{"version":3,"sources":["ListaDeUsuarios.jsx","index.jsx"],"names":["ListaDeUsuarios","useState","infos","setInfos","useEffect","axios","get","method","then","resposta","data","cards","card_number","cvv","expiry_date","abrirPagamento","setAbrirPagamento","pegarUsuario","setPegarUsuario","abrirPagou","setAbrirPagou","abrirRecebeu","setAbrirRecebeu","abrirNaoRecebeu","setAbrirNaoRecebeu","valorCartao","setValorCartao","valorDinheiro","setValorDinheiro","validarCampo","setValidarCampo","className","map","item","key","index","src","img","alt","name","id","username","onClick","style","display","thousandSeparator","value","onChange","event","target","prefix","inputmode","placeholder","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6341306.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport './listadeusuarios.css';\r\nimport axios from 'axios';\r\n\r\n//Pegando as informações da API pelo GET\r\nconst ListaDeUsuarios = () => {\r\n    const [infos, setInfos] = useState([])\r\n    useEffect(() => {\r\n        axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce', {\r\n            method: 'GET',\r\n        }).then((resposta) => {setInfos(resposta.data)})\r\n    }, [])\r\n\r\n// Mock com lista de cartões para teste\r\nconst cards = [\r\n    // cartão válido\r\n    {\r\n      card_number: '1111111111111111',\r\n      cvv: 789,\r\n      expiry_date: '01/18',\r\n    },\r\n    // cartão inválido\r\n    {\r\n      card_number: '4111111111111234',\r\n      cvv: 123,\r\n      expiry_date: '01/20',\r\n    },\r\n];\r\n\r\n// Função para pegar a escolha do cartão do input select\r\nconst escolhaDoCartao = (event) => {\r\n    setValorCartao(event.target.value);\r\n}\r\n\r\n// Ações dos modals\r\nconst [abrirPagamento, setAbrirPagamento] = useState(\"none\"); // Para abrir modal de pagamento\r\nconst [pegarUsuario, setPegarUsuario] = useState(\"\"); // Para pegar o nome do usuário\r\nconst [abrirPagou, setAbrirPagou] = useState(\"none\"); // Para abrir modal com recibo de pagamento\r\nconst [abrirRecebeu, setAbrirRecebeu] = useState(\"flex\"); // Para msg de erro de pagamento\r\nconst [abrirNaoRecebeu, setAbrirNaoRecebeu] = useState(\"none\"); // Para msg de erro de pagamento\r\nconst [valorCartao, setValorCartao] = useState(\"1\"); // Para pegar o cartão escolhido para pagamento\r\nconst [valorDinheiro, setValorDinheiro] = useState(\"\"); // Para pegar o valor de pagamento digitado\r\nconst [validarCampo, setValidarCampo] = useState(\"none\"); // Para validar campo de valor digitado\r\n\r\n// Função para abrir o modal de pagamento do usuário\r\nconst abrirModalPagar = (name) => {\r\n    setAbrirPagamento(\"flex\")\r\n    setPegarUsuario(name)\r\n}\r\n\r\nconst fecharPrimeiroModal = (name) => {\r\n    setAbrirPagamento(\"none\")\r\n}\r\n\r\n// Função que abre o modal de recibo de pagamento \r\nconst abrirModalPagou = () => {\r\n    if (valorDinheiro === \"\") {\r\n        setValidarCampo(\"flex\");\r\n    } else \r\n        {\r\n        if (valorCartao === \"1\") {\r\n            setAbrirRecebeu(\"flex\");\r\n            setAbrirNaoRecebeu(\"none\")\r\n        } else {\r\n            setAbrirRecebeu(\"none\");\r\n            setAbrirNaoRecebeu(\"flex\")\r\n        }\r\n        setAbrirPagamento(\"none\");\r\n        setAbrirPagou(\"flex\");\r\n        setValorDinheiro(\"\");\r\n        setValidarCampo(\"none\");\r\n    }\r\n}\r\n\r\n// Função para fechar o modal do recibo de pagamento\r\nconst fecharModal = () => {\r\n    setAbrirPagou(\"none\");\r\n}\r\n\r\n// Função para validar campo de valor para pagamento do usuário\r\nconst valorInput = (event) => {\r\n    setValorDinheiro(event.target.value);\r\n    setValidarCampo(\"none\");\r\n}\r\n\r\n// Renderizando na tela as informações recebidas da API \r\n    return (\r\n        <>\r\n        <div className='desktop-layout'>\r\n            {infos.map(item => (\r\n                \r\n                <div className=\"container\" key={item.index}>\r\n                    <div className=\"content\">\r\n                        <img className=\"thumbnail\" src={item.img} alt=\"Foto do usuário\" />\r\n                        <div className=\"infos\">   \r\n                            <p>Nome do Usuário: {item.name}</p>\r\n                            <p>ID: {item.id} - Username: {item.username}</p>\r\n                        </div>\r\n                        <button className=\"botao-pagar\" onClick={()=>{abrirModalPagar(item.name)}}>Pagar</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n            {/*--------------------------------Abrir Modal de pagamento----------------------------------*/}\r\n            <div className=\"abrirModal\" style={{display: abrirPagamento}}>\r\n                <div className=\"texto-cabecalho-modal\">\r\n                    <p className='modal-title'>Pagamento para <span>{pegarUsuario}</span></p>\r\n                    <div>\r\n                        <button className=\"btn-fechar\" onClick={()=>{fecharPrimeiroModal()}}>X</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"valorInput\">\r\n                    <NumberFormat thousandSeparator={true} value={valorDinheiro} onChange={valorInput} prefix={'R$ '} inputmode=\"numeric\" placeholder=\"R$ 0,00\"/>\r\n                    <p style={{display:validarCampo}}>Campo obrigatório</p>\r\n                </div>\r\n                <select value={valorCartao} onChange={escolhaDoCartao}>\r\n                <option value=\"1\">Cartão com final {cards[0].card_number.substr(-4)}</option>\r\n                <option value=\"2\">Cartão com final {cards[1].card_number.substr(-4)}</option>\r\n                </select>\r\n                <button className='btn-pagar' onClick={()=>{abrirModalPagou ()}}>Pagar</button>\r\n            </div>  \r\n\r\n            {/*------------------------------Abrir Modal de recibo de pagamento--------------------------------*/}\r\n            <div className=\"abrirModal\" style={{display: abrirPagou}}>\r\n                <p className=\"texto-cabecalho-modal\">Recibo de pagamento</p>\r\n                <p className=\"pagamento-sucess\" style={{display: abrirRecebeu}}>O Pagamento foi concluído com <span className='letter-sucess'>sucesso</span>!</p>\r\n                <p className=\"pagamento-negative\" style={{display: abrirNaoRecebeu}}>O Pagamento <span className='letter-negative'>não</span> foi concluído!</p>\r\n                <button className='btn-pagar' onClick={()=>{fecharModal()}}>Fechar</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaDeUsuarios","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ListaDeUsuarios from './ListaDeUsuarios';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ListaDeUsuarios />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}